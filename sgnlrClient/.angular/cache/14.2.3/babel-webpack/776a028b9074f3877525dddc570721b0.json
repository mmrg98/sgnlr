{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n// Not exported from index\n\n/** @private */\nvar TextMessageFormat =\n/** @class */\nfunction () {\n  function TextMessageFormat() {}\n\n  TextMessageFormat.write = function (output) {\n    return \"\" + output + TextMessageFormat.RecordSeparator;\n  };\n\n  TextMessageFormat.parse = function (input) {\n    if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\n      throw new Error(\"Message is incomplete.\");\n    }\n\n    var messages = input.split(TextMessageFormat.RecordSeparator);\n    messages.pop();\n    return messages;\n  };\n\n  TextMessageFormat.RecordSeparatorCode = 0x1e;\n  TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\n  return TextMessageFormat;\n}();\n\nexport { TextMessageFormat };","map":{"version":3,"names":["TextMessageFormat","write","output","RecordSeparator","parse","input","length","Error","messages","split","pop","RecordSeparatorCode","String","fromCharCode"],"sources":["C:/Users/LENOVO/Desktop/Eltizam/Projects/SignalR Pro/sgnlrClient/node_modules/@aspnet/signalr/dist/esm/TextMessageFormat.js"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n// Not exported from index\r\n/** @private */\r\nvar TextMessageFormat = /** @class */ (function () {\r\n    function TextMessageFormat() {\r\n    }\r\n    TextMessageFormat.write = function (output) {\r\n        return \"\" + output + TextMessageFormat.RecordSeparator;\r\n    };\r\n    TextMessageFormat.parse = function (input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        var messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    };\r\n    TextMessageFormat.RecordSeparatorCode = 0x1e;\r\n    TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n    return TextMessageFormat;\r\n}());\r\nexport { TextMessageFormat };\r\n"],"mappings":"AAAA;AACA;AACA;;AACA;AACA,IAAIA,iBAAiB;AAAG;AAAe,YAAY;EAC/C,SAASA,iBAAT,GAA6B,CAC5B;;EACDA,iBAAiB,CAACC,KAAlB,GAA0B,UAAUC,MAAV,EAAkB;IACxC,OAAO,KAAKA,MAAL,GAAcF,iBAAiB,CAACG,eAAvC;EACH,CAFD;;EAGAH,iBAAiB,CAACI,KAAlB,GAA0B,UAAUC,KAAV,EAAiB;IACvC,IAAIA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,KAA4BN,iBAAiB,CAACG,eAAlD,EAAmE;MAC/D,MAAM,IAAII,KAAJ,CAAU,wBAAV,CAAN;IACH;;IACD,IAAIC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAYT,iBAAiB,CAACG,eAA9B,CAAf;IACAK,QAAQ,CAACE,GAAT;IACA,OAAOF,QAAP;EACH,CAPD;;EAQAR,iBAAiB,CAACW,mBAAlB,GAAwC,IAAxC;EACAX,iBAAiB,CAACG,eAAlB,GAAoCS,MAAM,CAACC,YAAP,CAAoBb,iBAAiB,CAACW,mBAAtC,CAApC;EACA,OAAOX,iBAAP;AACH,CAjBsC,EAAvC;;AAkBA,SAASA,iBAAT"},"metadata":{},"sourceType":"module"}